@use 'sass:math';

@mixin fluid-text($max: 48, $min: 16) {
  $maxViewportWidth: 1400;
  $minViewportWidth: 360;

  $maxSize: math.div($max, 16);
  $minSize: math.div($min, 16);
  $maxWidth: math.div($maxViewportWidth, 16);
  $minWidth: math.div($minViewportWidth, 16);

  $slope: math.div(($maxSize - $minSize), ($maxWidth - $minWidth));
  $yAxisIntersection: -$minWidth * $slope + $minSize;

  font-size: clamp(
    #{$minSize * 1rem},
    #{$yAxisIntersection * 1rem} + #{$slope * 100vw},
    #{$maxSize * 1rem}
  );
}

/*  Пример:

h1 { @include fluid-text(40, 28) }
h2 { @include fluid-text(36, 26) }
h3 { @include fluid-text(32, 24) }
h4 { @include fluid-text(28, 22) }
h5 { @include fluid-text(24, 20) }
h6 { @include fluid-text(20, 18) }
body { @include fluid-text(18, 16) }
*/





/* пример для функции rem */

/*
.box {
  width: rem(400);        // 600px => 37.5rem
  height: rem(250);       // 280px => 17.5rem
  padding: rem(40);       // 40px  => 2.5rem
  border-radius: rem(15); // 15px  => 0.9375rem
  box-shadow:
    rem(6)                // 6px   => 0.375rem
    rem(6)                // 6px   => 0.375rem
    rem(10) deeppink;     // 10px  => 0.625rem

  // 768px => 48rem 
  @media (width < rem(768)) {
    padding: rem(20);     // 20px  => 1.25rem
    font-size: rem(14);   // 14px  => 0.875rem
  }
} */



@function rem($pixel) {
    @if math.is-unitless($pixel) {
      @return math.div($pixel, 16) + rem;
    } @else {
      @error 'Не используйте единицы измерения при работе с функцией rem()! Передавайте аргументом только числа.'
    }
  }
